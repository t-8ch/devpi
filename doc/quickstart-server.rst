
.. _`quickstart-server`:

Quickstart: permanent install on server/laptop
==========================================================

.. include:: links.rst

This quickstart document walks you through setting up your own
``devpi-server`` instance, controling it with supervisor_ and 
(optionally) serving it through nginx_ on a unix like system.  It also
shows how to create a first user and index.

Note that the :doc:`the pypi-mirroring quickstart
<quickstart-pypimirror>` already discusses the ``devpi-server
--start|--log|--stop`` background-server control options which you can
use to integrate with existing ``init.d`` or similar infrastructure.

Installing devpi-server
-----------------------

Install or upgrade ``devpi-server``::

    pip install -U devpi-server
    # if you want the web interface
    pip install -U devpi-web


And let's check the version::

    $ devpi-server --version
    2.0.0.dev4

.. _genconfig:

generating example config files for supervisor/nginx/cron
-----------------------------------------------------------

Use ``devpi-server --gen-config`` to write out several example config files 
into the ``gen-config`` directory (relative to where you invoke it
from).  The files come with some defaults to integrate with your own
permanent hosting infrastructure.  When ``--gen-config``
is present no server is started and no network request is performed
because the sole purpose is to help you get started with properly
running and deploying a devpi-server in your company or on your laptop.

If you have improvements or additions to the example configs please
share them with a 
`Merge/Pull Request on the devpi repo <https://bitbucket.org/hpk42/devpi`_.

Here is an example run::

    $ devpi-server --port 4040 --serverdir ~/mydevpiserver --gen-config
    wrote gen-config/supervisor-devpi.conf
    wrote gen-config/nginx-devpi.conf
    wrote gen-config/crontab

Below we look at the config files in a bit of detail.


.. _`configured nginx`:

``nginx-devpi.conf``: nginx site config
++++++++++++++++++++++++++++++++++++++++++++++++++

The nginx site configuration as generated by the above example run::

    $ cat gen-config/nginx-devpi.conf
    server {
        server_name localhost;   
        listen 80;
        gzip             on;
        gzip_min_length  2000;
        gzip_proxied     any;
        gzip_types       text/html application/json; 
    
        client_max_body_size 30M;
    
        root /tmp/home/mydevpiserver;  
    
        # try serving static files directly
        location ~ /\+f/ {
            try_files /+files$uri @proxy_to_app;
        }
        # try serving docs directly
        location ~ /\+doc/ {
            try_files $uri @proxy_to_app;
        }
        location / {
            # XXX how to tell nginx to just refer to @proxy_to_app here?
            try_files /.lqkwje @proxy_to_app;
        }   
        location @proxy_to_app {
            proxy_pass http://localhost:4040;
            #dynamic: proxy_set_header X-outside-url $scheme://$host:$server_port;
            proxy_set_header  X-outside-url http://localhost:80;
            proxy_set_header  X-Real-IP $remote_addr;
        }   
    } 

The devpi specific settings re found in the location directives
where we first try to serve static files through nginx before
deferring to the devpi-server server instance.  The X-outside URL
settings drive the devpi-server to generate correct URLs 
because it might otherwise assume it is exposed at ``http://localhost:4040``
and generate URLs accordingly.


supervisor site configuration
+++++++++++++++++++++++++++++++++++++++++++++++

Let's look at the supervisor configuration files.  The 
``supervisor-devpi.conf`` one presumes you have a master 
supervisor configuration on your system and
and just drop the include config file into a directory like
``/etc/supervisor/conf.d/`` on Ubuntu 12.04.  Here are the contents::

    $ cat gen-config/supervisor-devpi.conf
    
    [program:devpi-server]
    command=/home/hpk/venv/0/bin/devpi-server --port 4040 --serverdir /tmp/home/mydevpiserver
    user = hpk
    priority = 999
    startsecs = 5
    redirect_stderr = True
    autostart = True

If supervisord is running on your system you may, after copying
the config file to the supervisor ``conf.d`` directory, reload supervisord:

configuration directory 


crontab / start at bootup 
+++++++++++++++++++++++++

Lastly, if you want to have things running at system startup and you are
using a standard cron, a modified copy of your user crontab has been
amended which you may inspect::

    $ cat gen-config/crontab
    @reboot /home/hpk/venv/0/bin/devpi-server --start --port 4040 --serverdir /tmp/home/mydevpiserver

and install with::

    crontab TARGETDIR/etc/crontab


Installing devpi server and client
---------------------------------------------

.. 

    $ devpi-server --serverdir tutorial --stop
    no server found

..

    $ rm -rf tutorial

When started afresh, ``devpi-server`` will not contain any users
or indexes except for the root user and the ``root/pypi`` index
(see :ref:`using root/pypi index <install_first>`) which represents
and caches https://pypi.python.org packages.  Let's start a server
fur the purposes of this tutorial in the background::

    $ devpi-server --serverdir tutorial --port 4040 --start
    2014-07-09 15:26:24,602 INFO  NOCTX DB: Creating schema
    2014-07-09 15:26:24,656 INFO  [Wtx-1] setting password for user u'root'
    2014-07-09 15:26:24,656 INFO  [Wtx-1] created user u'root' with email None
    2014-07-09 15:26:24,657 INFO  [Wtx-1] created root user
    2014-07-09 15:26:24,657 INFO  [Wtx-1] created root/pypi index
    2014-07-09 15:26:24,676 INFO  [Wtx-1] fswriter0: committed: u'.config',u'root/.config'
    starting background devpi-server at http://localhost:4040
    /home/hpk/p/devpi/doc/tutorial/.xproc/devpi-server$ /home/hpk/venv/0/bin/devpi-server --serverdir tutorial --port 4040
    process u'devpi-server' started pid=17957
    devpi-server process startup detected
    logfile is at /home/hpk/p/devpi/doc/tutorial/.xproc/devpi-server/xprocess.log

The ``--start`` option will run a server in the background which
you can further control with the "background server options", see 
output of ``devpi-server -h`` at the end.

The server will listen on ``http://localhost:4040`` and also serve
the devpi web interface if you have ``devpi-web`` installed.


In order to manage users and indices on our fresh server let's also
install the ``devpi-client`` package::

    $ pip install -U --pre -q devpi-client

You can install this client software on different hosts if you
`configured nginx`_.

.. _auth:

Connecting to the server
++++++++++++++++++++++++++++++++++

If you `configured nginx`_, you can use the ``server_name``
of your nginx configuration for connecting to the server.
For purposes of this tutorial, we use the URL
``http://localhost:4040`` of the background tutorial server we started above::

    $ devpi use http://localhost:4040
    using server: http://localhost:4040/ (not logged in)
    no current index: type 'devpi use -l' to discover indices
    ~/.pydistutils.cfg     : http://localhost:4040/alice/dev/+simple/
    ~/.pip/pip.conf        : http://localhost:4040/alice/dev/+simple/
    ~/.buildout/default.cfg: http://localhost:4040/alice/dev/+simple/
    always-set-cfg: no

At this point we are not connected to any index, just to the
root server.   And we are not logged in.

setting the root password
++++++++++++++++++++++++++++++++++

The first thing to do is to set a password for the ``root`` user.
For that we first need to login::

    $ devpi login root --password ''
    logged in 'root', credentials valid for 10.00 hours

and can then change it::

    $ devpi user -m root password=123
    user modified: root

Let's verify we don't have any other users::

    $ devpi user -l
    root

The root user can modify any index and any user configuration.
As we don't plan to work further with the root user, we can log off::

    $ devpi logoff
    login information deleted

Registering a new user
++++++++++++++++++++++++++++++++

Let's register ourselves a new regular non-root user::

    $ devpi user -c alice password=456  email=alice@example.com
    user created: alice

and then login::

    $ devpi login alice --password=456
    logged in 'alice', credentials valid for 10.00 hours

Alice can now create her new ``dev`` index::

    $ devpi index -c dev
    http://localhost:4040/alice/dev:
      type=stage
      bases=root/pypi
      volatile=True
      uploadtrigger_jenkins=None
      acl_upload=alice
      pypi_whitelist=

and use it ::

    $ devpi use alice/dev
    current devpi index: http://localhost:4040/alice/dev (logged in as alice)
    ~/.pydistutils.cfg     : http://localhost:4040/alice/dev/+simple/
    ~/.pip/pip.conf        : http://localhost:4040/alice/dev/+simple/
    ~/.buildout/default.cfg: http://localhost:4040/alice/dev/+simple/
    always-set-cfg: no

Our ``alice/dev`` index derives from ``root/pypi`` by default
which makes all pypi.python.org releases available.

automatically setting pip/easy_install config files
++++++++++++++++++++++++++++++++++++++++++++++++++++

You can cause devpi to set ``$HOME`` configuration files which will
cause ``pip`` and ``easy_install`` to use our in-use index server::

    $ devpi use --set-cfg alice/dev
    current devpi index: http://localhost:4040/alice/dev (logged in as alice)
    ~/.pydistutils.cfg     : http://localhost:4040/alice/dev/+simple/
    ~/.pip/pip.conf        : http://localhost:4040/alice/dev/+simple/
    ~/.buildout/default.cfg: http://localhost:4040/alice/dev/+simple/
    always-set-cfg: no

This will modify or create common configuration files in your home directory
so that subsequent ``pip`` or ``easy_install`` invocations will work against
the ``user/indexname`` index.   You can configure ``devpi`` to perform
this configuration modification::

    $ devpi use --always-set-cfg=yes
    current devpi index: http://localhost:4040/alice/dev (logged in as alice)
    ~/.pydistutils.cfg     : http://localhost:4040/alice/dev/+simple/
    ~/.pip/pip.conf        : http://localhost:4040/alice/dev/+simple/
    ~/.buildout/default.cfg: http://localhost:4040/alice/dev/+simple/
    always-set-cfg: yes

This will imply ``--set-cfg`` on all subsequent ``devpi use ...`` operations.

Installing, uploading, testing and releasing
+++++++++++++++++++++++++++++++++++++++++++++++++

You may now continue with install, test and release activities
as described in the :ref:`release process quickstart <quickstart_release_steps>`.

Stopping the server
++++++++++++++++++++++++++++++++++++++++++

Let's not forget to stop our background tutorial server::

    $ devpi-server --serverdir tutorial --stop
    killed server pid=17957

versioning, exporting and importing server state
----------------------------------------------------

.. note::

    you don't need to perform any explicit data migration if you are 
    using devpi-server as a pure pypi mirror, i.e. not creating
    users or uploading releases to indexes.  devpi-server
    will automatically wipe and re-initialize the pypi cache 
    in case of incompatible internal data-layout changes.

``devpi-server`` maintains its state in a ``serverdir``,
by default in ``$HOME/.devpi/server``, unless you specify
a different location via the ``--serverdir`` option.

You can use the ``--export`` option to dump user and index state
into a directory::

    devpi-server --serverdir tutorial --export dumpdir

``dumpdir`` will then contain a ``dataindex.json`` and the
files that comprise the server state.

Using the same version of ``devpi-server`` or a future release you can
then import this dumped server state::

    $ devpi-server --serverdir newserver --import dumpdir

This will import the previously exported server dump and
create a new server state structure in the ``newserver`` directory.
You can then run a server from this new state::

    devpi-server --serverdir newserver --port 5000

and check through a browser that all your data got migrated correctly.
Once you are happy you can remove the old serverdir.

.. note::

    The ``root/pypi`` pypi-caching index along with its files
    is neither exported nor imported.
